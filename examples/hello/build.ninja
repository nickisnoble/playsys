ninja_required_version = 1.3

builddir     = out
base_dir     = ../../backends/base
js_dir       = ../../backends/js
wgpu_dir     = ../../backends/wgpu
wgpu_lib_dir = $wgpu_dir/out/debug

# --------------------------------------------------------------
# flags

cflags = $
  -std=c11 $
  -g $
  -fcolor-diagnostics $
  -Wall $
  -Wextra $
  -Wvla $
  -Wimplicit-fallthrough $
  -Wno-missing-field-initializers $
  -Wno-unused-parameter $
  -Werror=implicit-function-declaration $
  -Wcovered-switch-default $
  -Wunused $
  -I../../include $
  -I$wgpu_dir/include

ldflags =

cflags_wasm = $
  --no-standard-libraries $
  -fvisibility=hidden $
  -Ofast $
  --target=wasm32

# cflags_host = $
#   -O3 $
#   -march=native
cflags_host = -O0

ldflags_macos = $
  -platform_version macos 10.15 10.15 $
  -ObjC $
  -lSystem.B $
  -framework CoreFoundation $
  -framework Cocoa $
  -framework Metal $
  -framework IOKit $
  -framework IOSurface $
  -framework QuartzCore

ldflags_wasm = $
  -allow-undefined-file ../../etc/playsys-wasm.syms $
  --no-entry $
  --no-gc-sections $
  --export-dynamic $
  --import-memory

# --------------------------------------------------------------
# rules

rule c2obj_host
  command = clang -MMD -MF $out.d $cflags $cflags_host -c -o $out $in
  depfile = $out.d

rule c2obj_wasm
  command = clang -MMD -MF $out.d $cflags $cflags_wasm -c -o $out $in
  depfile = $out.d

rule c2bc_wasm
  command = clang -MMD -MF $out.d $cflags $cflags_wasm -emit-llvm -c -o $out $in
  depfile = $out.d

rule wasm_compile_and_link
  command = clang $cflags $cflags_wasm $
    -Wno-override-module $
    -Wl,--no-entry $
    -Wl,--no-gc-sections $
    -Wl,--export-dynamic $
    -Wl,--import-memory $
    -Wl,-allow-undefined-file ../../etc/playsys-wasm.syms $
    -o $out $in

rule ld_macos_x64
  command = ld64.lld $ldflags $ldflags_macos -arch x86_64 $in -o $out

rule ld_wasm
  command = wasm-ld $ldflags $ldflags_wasm -error-limit=0 $in -o $out

rule wasm2wast
  command = wasm2wat $in -o $out

rule wasm_asyncify
  command = wasm-opt --asyncify -O $in -o $out

# --------------------------------------------------------------
# targets

build $builddir/hello_mac_x64_d: ld_macos_x64 $
  $builddir/mac_x64/hello.o $
  $builddir/mac_x64/hello_triangle.o $
  $builddir/mac_x64/hello_ioring.o $
  $builddir/mac_x64/syslib.o $
  $builddir/mac_x64/ioring.o $
  $builddir/mac_x64/vfile.o $
  $builddir/mac_x64/sys_posix.o
  ldflags = $ldflags -L$wgpu_lib_dir -rpath $wgpu_lib_dir -lplaywgpu_d -lc++

build $builddir/hello_mac_x64: ld_macos_x64 $
  $builddir/mac_x64/hello.o $
  $builddir/mac_x64/hello_triangle.o $
  $builddir/mac_x64/hello_ioring.o $
  $builddir/mac_x64/syslib.o $
  $builddir/mac_x64/ioring.o $
  $builddir/mac_x64/vfile.o $
  $builddir/mac_x64/sys_posix.o $
  $wgpu_lib_dir/libplaywgpu_all.a

# build $builddir/hello.wasm: wasm_asyncify $builddir/hello1.wasm
build $builddir/hello.wasm: wasm_asyncify $builddir/hello2.wasm

# build $builddir/hello1.wasm: wasm_compile_and_link $
#   $builddir/wasm32/hello.bc $
#   $builddir/wasm32/hello_triangle.bc $
#   $builddir/wasm32/syslib.bc $
#   $builddir/wasm32/sys_wasm.bc $
#   $builddir/wasm32/pwgpu_ctx_wasm.bc

build $builddir/hello2.wasm: ld_wasm $
  $builddir/wasm32/hello.o $
  $builddir/wasm32/hello_triangle.o $
  $builddir/wasm32/hello_ioring.o $
  $builddir/wasm32/syslib.o $
  $builddir/wasm32/sys_wasm.o $
  $builddir/wasm32/pwgpu_ctx_wasm.o

build $builddir/mac_x64/hello.o:          c2obj_host hello.c
build $builddir/mac_x64/hello_triangle.o: c2obj_host hello_triangle.c
build $builddir/mac_x64/hello_ioring.o:   c2obj_host hello_ioring.c
build $builddir/mac_x64/syslib.o:         c2obj_host syslib.c
build $builddir/mac_x64/sys_posix.o:      c2obj_host $base_dir/sys_posix.c
build $builddir/mac_x64/vfile.o:          c2obj_host $base_dir/vfile.c
build $builddir/mac_x64/ioring.o:  c2obj_host $base_dir/ioring.c

build $builddir/wasm32/hello.o:          c2obj_wasm hello.c
build $builddir/wasm32/hello_triangle.o: c2obj_wasm hello_triangle.c
build $builddir/wasm32/syslib.o:         c2obj_wasm syslib.c
build $builddir/wasm32/sys_wasm.o:       c2obj_wasm $js_dir/sys_wasm.c
build $builddir/wasm32/pwgpu_ctx_wasm.o: c2obj_wasm $wgpu_dir/src/ctx_wasm.c

# build $builddir/wasm32/hello.bc:          c2bc_wasm hello.c
# build $builddir/wasm32/hello_triangle.bc: c2bc_wasm hello_triangle.c
# build $builddir/wasm32/syslib.bc:         c2bc_wasm syslib.c
# build $builddir/wasm32/sys_wasm.bc:       c2bc_wasm $js_dir/sys_wasm.c
# build $builddir/wasm32/pwgpu_ctx_wasm.bc: c2bc_wasm $wgpu_dir/src/ctx_wasm.c

# --------------------------------------------------------------

default $builddir/hello_mac_x64 $builddir/hello.wasm
